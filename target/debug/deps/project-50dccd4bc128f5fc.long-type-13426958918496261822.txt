warp::Server<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::recover::Recover<impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>, fn(Rejection) -> impl Future<Output = Result<impl Reply, Infallible>> {handle_rejection}>, warp::filter::recover::Recover<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy, fn(Rejection) -> impl Future<Output = Result<impl Reply, Infallible>> {handle_rejection}>>, warp::filter::recover::Recover<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>>, fn(Rejection) -> impl Future<Output = Result<impl Reply, Infallible>> {handle_rejection}>>, warp::filter::recover::Recover<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>>, fn(Rejection) -> impl Future<Output = Result<impl Reply, Infallible>> {handle_rejection}>>, warp::filter::recover::Recover<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::filter::FilterClone + warp::filter::FilterBase<Extract = (warp::fs::File,), Error = Rejection>>, fn(Rejection) -> impl Future<Output = Result<impl Reply, Infallible>> {handle_rejection}>>>
